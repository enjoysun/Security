version: "2"            # 表示使用docker-compose.yml的Version 2 file format编写

# docker容器间通信方式:
# 1.容器创建时通过 --network 指定相应的网络，或者通过 docker network connect 将现有容器加入到指定网络,前提是需要通信的容器处于同一network
#   然后通过容器间ip进行通信，exec进入内部或者inspect查看network详情获取分配ip
# 2.对于部分容器使用ip进行通信不够灵活，docker提供了使用容器名进行通信的方法，即本案例中配置文件即使用容器名进行通信
services:
  feign:
    hostname: feign
    image: consumer-feign/spring-cloud-consumer-feign
    networks:
    - eureka-net
    ports:
    - "8070:8070"
#    environment:
#    - spring.profiles.active=service1
  ribbon:
    hostname: ribbon
    image: consumer-ribbon/spring-cloud-consumer-ribbon
    networks:
    - eureka-net
    ports:
    - "8071:8071"
#    environment:
#    - spring.profiles.active=service1
#  zuul01:
#    hostname: zuul # 为了避免增加hosts文件映射，使用已经存在的主机名（后觉得不妥，遂改回）
#    image: zuul-docker/spring-cloud-zuul
#    networks:
#    - eureka-net
#    ports:
#    - "8060:8060"
#  16Gmac顶不住，取消部分水平扩展容器
#  zuul02:
#    hostname: feign
#    image: zuul-docker/spring-cloud-zuul
#    networks:
#    - eureka-net
#    ports:
#    - "8061:8061"
#  zuul03:
#    hostname: feign
#    image: zuul-docker/spring-cloud-zuul
#    networks:
#    - eureka-net
#    ports:
#    - "8062:8062"

networks:
  eureka-net:
    driver: bridge

